"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var extractOffSetFromEvent = function (e, scalingFactor, canvasRef) {
    var _a = e.nativeEvent, offsetX = _a.offsetX, offsetY = _a.offsetY, touches = _a.touches, mouseClientX = _a.clientX, mouseClientY = _a.clientY;
    // If offset coords are directly on the event we use them
    if (offsetX && offsetY) {
        return {
            offsetX: offsetX * scalingFactor,
            offsetY: offsetY * scalingFactor
        };
    }
    // Otherwise we need to calculate them as difference between (x, y) of event and (left, top) corner of canvas
    // We need to check whether user is using a touch device or just the mouse and extract
    // the touch/click coords accordingly
    var clientX = touches && touches.length ? touches[0].clientX : mouseClientX;
    var clientY = touches && touches.length ? touches[0].clientY : mouseClientY;
    var rect = canvasRef.getBoundingClientRect();
    var x = (clientX - rect.left) * scalingFactor;
    var y = (clientY - rect.top) * scalingFactor;
    return {
        offsetX: x,
        offsetY: y
    };
};
exports.extractOffSetFromEvent = extractOffSetFromEvent;
//# sourceMappingURL=eventHelpers.js.map