/** @type {import('tailwindcss').Config} */

export default {
  darkMode: ['class'],
  important:  true,
  content: ['./index.html', './src/**/*.{js,ts,jsx,tsx}'],
  theme: {
    extend: {
      container: {
        padding: {
          DEFAULT: '1rem',
          sm: '2rem',
          lg: '4rem',
          xl: '5rem',
          '2xl': '0.5rem',
        },
      },
      colors: {
        primary: {
          50: 'rgb(from var(--color-primary-50) r g b / <alpha-value>)',
          100: 'rgb(from var(--color-primary-100) r g b / <alpha-value>)',
          200: 'rgb(from var(--color-primary-200) r g b / <alpha-value>)',
          300: 'rgb(from var(--color-primary-300) r g b / <alpha-value>)',
          400: 'rgb(from var(--color-primary-400) r g b / <alpha-value>)',
          500: 'rgb(from var(--color-primary-500) r g b / <alpha-value>)',
          600: 'rgb(from var(--color-primary-600) r g b / <alpha-value>)',
          700: 'rgb(from var(--color-primary-700) r g b / <alpha-value>)',
          800: 'rgb(from var(--color-primary-800) r g b / <alpha-value>)',
          900: 'rgb(from var(--color-primary-900) r g b / <alpha-value>)',
          main: 'rgb(from var(--color-primary-main) r g b / <alpha-value>)',
          dark: 'rgb(from var(--color-primary-dark) r g b / <alpha-value>)',
          light: 'rgb(from var(--color-primary-light) r g b / <alpha-value>)',
          contrastText: 'rgb(from var(--color-primary-contrastText) r g b / <alpha-value>)',
          hover: 'rgb(from var(--color-primary-main) r g b / .04)',
          selected: 'rgb(from var(--color-primary-main) r g b / .08)',
          dragged: 'rgb(from var(--color-primary-main) r g b / .08)',
          // focus: 'rgb(from var(--color-primary-main) r g b / .12)',
          // focusVisible: 'rgb(from var(--color-primary-main) r g b / .3)',
          opacity: 'rgb(from var(--color-primary-main) r g b / .16)',
          outborder: 'rgb(from var(--color-primary-main) r g b / .5)',
          pressed: 'rgb(from var(--color-primary-main) r g b / .1)',
        },
        secondary: {
          50: 'rgb(from var(--color-secondary-50) r g b / <alpha-value>)',
          100: 'rgb(from var(--color-secondary-100) r g b / <alpha-value>)',
          200: 'rgb(from var(--color-secondary-200) r g b / <alpha-value>)',
          300: 'rgb(from var(--color-secondary-300) r g b / <alpha-value>)',
          400: 'rgb(from var(--color-secondary-400) r g b / <alpha-value>)',
          500: 'rgb(from var(--color-secondary-500) r g b / <alpha-value>)',
          600: 'rgb(from var(--color-secondary-600) r g b / <alpha-value>)',
          700: 'rgb(from var(--color-secondary-700) r g b / <alpha-value>)',
          800: 'rgb(from var(--color-secondary-800) r g b / <alpha-value>)',
          900: 'rgb(from var(--color-secondary-900) r g b / <alpha-value>)',
          main: 'rgb(from var(--color-secondary-main) r g b / <alpha-value>)',
          dark: 'rgb(from var(--color-secondary-dark) r g b / <alpha-value>)',
          light: 'rgb(from var(--color-secondary-light) r g b / <alpha-value>)',
          contrastText: 'rgb(from var(--color-secondary-contrastText) r g b / <alpha-value>)',
          hover: 'rgb(from var(--color-secondary-main) r g b / .04)',
          selected: 'rgb(from var(--color-secondary-main) r g b / .08)',
          dragged: 'rgb(from var(--color-secondary-main) r g b / .08)',
          // focus: 'rgb(from var(--color-secondary-main) r g b / .12)',
          // focusVisible: 'rgb(from var(--color-secondary-main) r g b / .3)',
          opacity: 'rgb(from var(--color-secondary-main) r g b / .16)',
          outborder: 'rgb(from var(--color-secondary-main) r g b / .5)',
          pressed: 'rgb(from var(--color-secondary-main) r g b / .1)',
        },
        error: {
          50: 'rgb(from var(--color-error-50) r g b / <alpha-value>)',
          100: 'rgb(from var(--color-error-100) r g b / <alpha-value>)',
          200: 'rgb(from var(--color-error-200) r g b / <alpha-value>)',
          300: 'rgb(from var(--color-error-300) r g b / <alpha-value>)',
          400: 'rgb(from var(--color-error-400) r g b / <alpha-value>)',
          500: 'rgb(from var(--color-error-500) r g b / <alpha-value>)',
          600: 'rgb(from var(--color-error-600) r g b / <alpha-value>)',
          700: 'rgb(from var(--color-error-700) r g b / <alpha-value>)',
          800: 'rgb(from var(--color-error-800) r g b / <alpha-value>)',
          900: 'rgb(from var(--color-error-900) r g b / <alpha-value>)',
          main: 'rgb(from var(--color-error-main) r g b / <alpha-value>)',
          dark: 'rgb(from var(--color-error-dark) r g b / <alpha-value>)',
          light: 'rgb(from var(--color-error-light) r g b / <alpha-value>)',
          contrastText: 'rgb(from var(--color-error-contrastText) r g b / <alpha-value>)',
          A100: 'rgb(from var(--color-error-A100) r g b / <alpha-value>)',
          A200: 'rgb(from var(--color-error-A200) r g b / <alpha-value>)',
          A400: 'rgb(from var(--color-error-A400) r g b / <alpha-value>)',
          A700: 'rgb(from var(--color-error-A700) r g b / <alpha-value>)',
        },
        warning: {
          50: 'rgb(from var(--color-warning-50) r g b / <alpha-value>)',
          100: 'rgb(from var(--color-warning-100) r g b / <alpha-value>)',
          200: 'rgb(from var(--color-warning-200) r g b / <alpha-value>)',
          300: 'rgb(from var(--color-warning-300) r g b / <alpha-value>)',
          400: 'rgb(from var(--color-warning-400) r g b / <alpha-value>)',
          500: 'rgb(from var(--color-warning-500) r g b / <alpha-value>)',
          600: 'rgb(from var(--color-warning-600) r g b / <alpha-value>)',
          700: 'rgb(from var(--color-warning-700) r g b / <alpha-value>)',
          800: 'rgb(from var(--color-warning-800) r g b / <alpha-value>)',
          900: 'rgb(from var(--color-warning-900) r g b / <alpha-value>)',
          main: 'rgb(from var(--color-warning-main) r g b / <alpha-value>)',
          dark: 'rgb(from var(--color-warning-dark) r g b / <alpha-value>)',
          light: 'rgb(from var(--color-warning-light) r g b / <alpha-value>)',
          contrastText: 'rgb(from var(--color-warning-contrastText) r g b / <alpha-value>)',
          A100: 'rgb(from var(--color-warning-A100) r g b / <alpha-value>)',
          A200: 'rgb(from var(--color-warning-A200) r g b / <alpha-value>)',
          A400: 'rgb(from var(--color-warning-A400) r g b / <alpha-value>)',
          A700: 'rgb(from var(--color-warning-A700) r g b / <alpha-value>)',
        },
        success: {
          50: 'rgb(from var(--color-success-50) r g b / <alpha-value>)',
          100: 'rgb(from var(--color-success-100) r g b / <alpha-value>)',
          200: 'rgb(from var(--color-success-200) r g b / <alpha-value>)',
          300: 'rgb(from var(--color-success-300) r g b / <alpha-value>)',
          400: 'rgb(from var(--color-success-400) r g b / <alpha-value>)',
          500: 'rgb(from var(--color-success-500) r g b / <alpha-value>)',
          600: 'rgb(from var(--color-success-600) r g b / <alpha-value>)',
          700: 'rgb(from var(--color-success-700) r g b / <alpha-value>)',
          800: 'rgb(from var(--color-success-800) r g b / <alpha-value>)',
          900: 'rgb(from var(--color-success-900) r g b / <alpha-value>)',
          main: 'rgb(from var(--color-success-main) r g b / <alpha-value>)',
          dark: 'rgb(from var(--color-success-dark) r g b / <alpha-value>)',
          light: 'rgb(from var(--color-success-light) r g b / <alpha-value>)',
          contrastText: 'rgb(from var(--color-success-contrastText) r g b / <alpha-value>)',
          A100: 'rgb(from var(--color-success-A100) r g b / <alpha-value>)',
          A200: 'rgb(from var(--color-success-A200) r g b / <alpha-value>)',
          A400: 'rgb(from var(--color-success-A400) r g b / <alpha-value>)',
          A700: 'rgb(from var(--color-success-A700) r g b / <alpha-value>)',
        },
        info: {
          50: 'rgb(from var(--color-info-50) r g b / <alpha-value>)',
          100: 'rgb(from var(--color-info-100) r g b / <alpha-value>)',
          200: 'rgb(from var(--color-info-200) r g b / <alpha-value>)',
          300: 'rgb(from var(--color-info-300) r g b / <alpha-value>)',
          400: 'rgb(from var(--color-info-400) r g b / <alpha-value>)',
          500: 'rgb(from var(--color-info-500) r g b / <alpha-value>)',
          600: 'rgb(from var(--color-info-600) r g b / <alpha-value>)',
          700: 'rgb(from var(--color-info-700) r g b / <alpha-value>)',
          800: 'rgb(from var(--color-info-800) r g b / <alpha-value>)',
          900: 'rgb(from var(--color-info-900) r g b / <alpha-value>)',
          main: 'rgb(from var(--color-info-main) r g b / <alpha-value>)',
          dark: 'rgb(from var(--color-info-dark) r g b / <alpha-value>)',
          light: 'rgb(from var(--color-info-light) r g b / <alpha-value>)',
          contrastText: 'rgb(from var(--color-info-contrastText) r g b / <alpha-value>)',
          A100: 'rgb(from var(--color-info-A100) r g b / <alpha-value>)',
          A200: 'rgb(from var(--color-info-A200) r g b / <alpha-value>)',
          A400: 'rgb(from var(--color-info-A400) r g b / <alpha-value>)',
          A700: 'rgb(from var(--color-info-A700) r g b / <alpha-value>)',
        },
        grey: {
          50: 'rgb(from var(--color-grey-50) r g b / <alpha-value>)',
          100: 'rgb(from var(--color-grey-100) r g b / <alpha-value>)',
          200: 'rgb(from var(--color-grey-200) r g b / <alpha-value>)',
          300: 'rgb(from var(--color-grey-300) r g b / <alpha-value>)',
          400: 'rgb(from var(--color-grey-400) r g b / <alpha-value>)',
          500: 'rgb(from var(--color-grey-500) r g b / <alpha-value>)',
          600: 'rgb(from var(--color-grey-600) r g b / <alpha-value>)',
          700: 'rgb(from var(--color-grey-700) r g b / <alpha-value>)',
          800: 'rgb(from var(--color-grey-800) r g b / <alpha-value>)',
          900: 'rgb(from var(--color-grey-900) r g b / <alpha-value>)',
          A100: 'rgb(from var(--color-grey-A100) r g b / <alpha-value>)',
          A200: 'rgb(from var(--color-grey-A200) r g b / <alpha-value>)',
          A400: 'rgb(from var(--color-grey-A400) r g b / <alpha-value>)',
          A700: 'rgb(from var(--color-grey-A700) r g b / <alpha-value>)',
        },
        text: {
          primary: 'rgb(from var(--color-text-primary) r g b / <alpha-value>)',
          secondary: 'rgb(from var(--color-text-secondary) r g b / <alpha-value>)',
          disabled: 'rgb(from var(--color-text-disabled) r g b / <alpha-value>)',
        },
        background: {
          default: 'rgb(from var(--color-background-default) r g b / <alpha-value>)',
          paper: 'rgb(from var(--color-background-paper) r g b / <alpha-value>)',
          ai: 'rgb(from var(--color-background-ai) r g b / <alpha-value>)'
        },
        action: {
          active: 'var(--color-action-active)',
          hover: 'var(--color-action-hover)',
          selected: 'var(--color-action-selected)',
          disabled: 'var(--color-action-disabled)',
          disabledBackground: 'var(--color-action-disabledBackground)',
          // focus: 'var(--color-action-focus)',
          hoverOpacity: 'var(--color-action-hoverOpacity)',
          disabledOpacity: 'var(--color-action-disabledOpacity)',
        },
      },
      fontSize: {
        '2xs': '0.625rem',
        '3xs': '0.5rem',
        '4xs': '0.375rem',
      },
      fontFamily: {
        morabba: 'Morabba',
      },
      borderRadius: {
        lg: 'var(--radius)',
        md: 'calc(var(--radius) - 2px)',
        sm: 'calc(var(--radius) - 4px)',
      },
      animation: {
        'shimmer-slide': 'shimmer-slide var(--speed) ease-in-out infinite alternate',
        'spin-around': 'spin-around calc(var(--speed) * 2) infinite linear',
        marquee: 'marquee var(--duration) infinite linear',
        'marquee-vertical': 'marquee-vertical var(--duration) linear infinite',
      },
      keyframes: {
        'shimmer-slide': {
          to: {
            transform: 'translate(calc(100cqw - 100%), 0)',
          },
        },
        'spin-around': {
          '0%': {
            transform: 'translateZ(0) rotate(0)',
          },
          '15%, 35%': {
            transform: 'translateZ(0) rotate(90deg)',
          },
          '65%, 85%': {
            transform: 'translateZ(0) rotate(270deg)',
          },
          '100%': {
            transform: 'translateZ(0) rotate(360deg)',
          },
        },
        marquee: {
          from: {
            transform: 'translateX(0)',
          },
          to: {
            transform: 'translateX(calc(-100% - var(--gap)))',
          },
        },
        'marquee-vertical': {
          from: {
            transform: 'translateY(0)',
          },
          to: {
            transform: 'translateY(calc(-100% - var(--gap)))',
          },
        },
      },
    },
  },
  plugins: [require('tailwindcss-animate')],
  plugins: [require('@tailwindcss/line-clamp')],

};
